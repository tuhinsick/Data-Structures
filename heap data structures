#include<iostream>
using namespace std;

void maxHeapify(int arr[], int n, int i){
  int largest = i;
  int left = 2*i;
  int right = 2*i + 1;

  if(left<=n && arr[largest]<arr[left]){
    largest = left;
  }

  if(right<=n && arr[largest]<arr[right]){
    largest = right;
  }

  if(largest != i){
    swap(arr[largest],arr[i]);
    maxHeapify(arr,n,largest);
  }

}

void heapSort(int arr[],int n){
  int t = n;
  while(t>1){
  swap(arr[1],arr[t]);
  t--;
  maxHeapify(arr,t,1);
  }


}

void minHeapify(int arr[], int n, int i){
  int smallest = i;
  int left = 2*i;
  int right = 2*i + 1;
  if(left<=n && arr[smallest]>arr[left]){
    smallest = left;
  }

  if(right<=n && arr[smallest]>arr[right]){
    smallest = right;
  }

  if(smallest != i){
    swap(arr[smallest],arr[i]);
    minHeapify(arr,n,smallest);
  }
}

int main(){
  int arr[] = {-1,20,234,22,1,2,3};
  int n = sizeof(arr)/sizeof(arr[0]);
  n = n-1;
 

  for(int i=n/2;i>0;i--){
    minHeapify(arr,n,i);
  }


  for(int i=1;i<=n;i++){
    cout<<arr[i]<<" ";
  }
  cout<<endl;
   for(int i=n/2;i>0;i--){
    maxHeapify(arr,n,i);
  }

  for(int i=1;i<=n;i++){
    cout<<arr[i]<<" ";
  }

  

  heapSort(arr,n);
  cout<<endl;
  for(int i=1;i<=n;i++){
    cout<<arr[i]<<" ";
  }
}
